Index: generator/migrations/0001_initial.py
===================================================================
--- generator/migrations/0001_initial.py	(date 1540628945000)
+++ generator/migrations/0001_initial.py	(date 1540628945000)
@@ -1,44 +0,0 @@
-# Generated by Django 2.1.1 on 2018-09-12 13:51
-
-from django.db import migrations, models
-import django.db.models.deletion
-
-
-class Migration(migrations.Migration):
-
-    initial = True
-
-    dependencies = [
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Choice',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('choice_text', models.CharField(max_length=200)),
-                ('votes', models.IntegerField(default=0)),
-            ],
-        ),
-        migrations.CreateModel(
-            name='Question',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('question_text', models.CharField(max_length=200)),
-                ('pub_date', models.DateTimeField(verbose_name='date published')),
-            ],
-        ),
-        migrations.CreateModel(
-            name='User_input',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('usr_input', models.CharField(max_length=200)),
-                ('usr_input_datum', models.DateField(auto_now_add=True, null=True)),
-            ],
-        ),
-        migrations.AddField(
-            model_name='choice',
-            name='question',
-            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='generator.Question'),
-        ),
-    ]
Index: generator/migrations/0002_document.py
===================================================================
--- generator/migrations/0002_document.py	(date 1540628945000)
+++ generator/migrations/0002_document.py	(date 1540628945000)
@@ -1,20 +0,0 @@
-# Generated by Django 2.1.1 on 2018-09-16 15:09
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('generator', '0001_initial'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Document',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('docfile', models.FileField(upload_to='documents/')),
-            ],
-        ),
-    ]
Index: generator/migrations/0003_document_doc_date.py
===================================================================
--- generator/migrations/0003_document_doc_date.py	(date 1540628945000)
+++ generator/migrations/0003_document_doc_date.py	(date 1540628945000)
@@ -1,18 +0,0 @@
-# Generated by Django 2.1.1 on 2018-09-21 18:38
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('generator', '0002_document'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='document',
-            name='doc_date',
-            field=models.DateField(null=True),
-        ),
-    ]
Index: generator/migrations/__init__.py
===================================================================
--- generator/migrations/__init__.py	(date 1540628945000)
+++ generator/migrations/__init__.py	(date 1540628945000)
@@ -1,0 +0,0 @@
Index: generator/templates/ais_gen/detail.html
===================================================================
--- generator/templates/ais_gen/detail.html	(date 1540628945000)
+++ generator/templates/ais_gen/detail.html	(date 1540628945000)
@@ -1,15 +0,0 @@
-<h1>{{ question.question_text }}</h1>
-
-{% if error_message %}
-    <p><strong>{{ error_message }}</strong></p>
-{% endif %}
-
-<form action="{% url 'generator:vote' question.id %}" method="post">
-{% csrf_token %}
-    {% for choice in question.choice_set.all %}
-        <input type="radio" name="choice" id="choice{{ forloop.counter }}" value="{{ choice.id }}">
-        <label for="choice{{ forloop.counter }}">{{ choice.choice_text }}</label><br>
-    {% endfor %}
-<input type="submit" value="Vote"><br>
-</form>
-<a href="{% url 'generator:index' %}">Index</a>
\ No newline at end of file
Index: generator/templates/ais_gen/results.html
===================================================================
--- generator/templates/ais_gen/results.html	(date 1540628945000)
+++ generator/templates/ais_gen/results.html	(date 1540628945000)
@@ -1,9 +0,0 @@
-<h1> {{ questionquestion_text }}</h1>
-
-<ul>
-    {% for choice in question.choice_set.all %}
-        <li>{{ choice.choice_text }} -- {{ choice.votes }} vote{{ choice.votes|pluralize }}</li>
-    {% endfor %}
-</ul>
-
-<a href="{% url 'generator:detail'  question.id%}"> Vote again?</a>
\ No newline at end of file
Index: generator/templates/ais_gen/base.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- generator/templates/ais_gen/base.html	(date 1540628945000)
+++ generator/templates/ais_gen/base.html	(date 1540813579228)
@@ -50,9 +50,9 @@
         }
 
         footer {
-            background: #beafe6;
-
+            background: #2f263a;
             padding-top: 10px;
+            color: white;
         }
 
         article {
@@ -65,7 +65,7 @@
             padding-right: 25px;
         }
 
-        ul {
+        ul.menu {
             list-style-type: none;
             margin: 0;
             padding: 0;
@@ -73,14 +73,14 @@
             background-color: #333;
         }
 
-        li {
+        li.menu-li {
             float: left;
         }
 
         li:last-child {
         }
 
-        li a {
+        li.menu-li a {
             display: block;
             color: white;
             text-align: center;
@@ -88,23 +88,28 @@
             text-decoration: none;
         }
 
-        li a:hover:not(.active) {
+        li.menu-li a:hover:not(.active) {
             background-color: #111;
         }
 
         .active {
-            background-color: #4CAF50;
+            background-color: #0F6A8B;
         }
     </style>
 </head>
 <body>
 <div class="grid">
     <header>
-        <ul>
-            <li><a class="active" href="{% url 'generator:index' %}">Index</a></li>
-            <li><a href="{% url 'generator:upload_date' %}">start</a></li>
-            <li><a href="#contact">Contact</a></li>
-            <li style="float:right"><a href="#about">About</a></li>
+        <ul class="menu">
+            <li class="menu-li"><a class="active" href="{% url 'generator:upload_date' %}">
+                <div>
+                    <p>Generátor AIS</p><br>
+                    <p>beta</p>
+                </div>
+            </a></li>
+            <li class="menu-li"><a href="{% url 'generator:index' %}">návod</a></li>
+            <li class="menu-li"><a href="#contact">Contact</a></li>
+            <li class="menu-li" style="float:right"><a href="#about">About</a></li>
         </ul>
     </header>
 
@@ -115,7 +120,7 @@
 
 
     <footer>
-        Footer
+        <h5>Jan Bortel 2018</h5>
     </footer>
 </div>
 </body>
Index: generator/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- generator/admin.py	(date 1540628945000)
+++ generator/admin.py	(date 1540651025866)
@@ -1,4 +1,4 @@
 from django.contrib import admin
-from .models import Question
+
 
-admin.site.register(Question)
\ No newline at end of file
+#admin.site.register(Question)
\ No newline at end of file
Index: generator/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- generator/models.py	(date 1540628945000)
+++ generator/models.py	(date 1540650862809)
@@ -5,43 +5,47 @@
 from django.utils import timezone
 
 
-class Question(models.Model):
-    question_text = models.CharField(max_length=200)
-    pub_date = models.DateTimeField('date published')
-
-    def __str__(self):
-        return self.question_text
-
-    def was_published_recently(self):
-        now = timezone.now()
-        return  now - datetime.timedelta(days=1) <= self.pub_date <= now
-
-class Choice(models.Model):
-    question = models.ForeignKey(Question, on_delete=models.CASCADE)
-    choice_text = models.CharField(max_length=200)
-    votes = models.IntegerField(default=0)
-
-    def __str__(self):
-        return self.choice_text
-
-
-class User_input(models.Model):
-    usr_input = models.CharField(max_length=200)
-    usr_input_datum = models.DateField(auto_now_add=True, null=True)
-    #text_to_show = "Generátor AIS."
-    #list_test = uzivatele
-    #dict_test = dict(list(enumerate(list_test)))
-
-
-    def __str__(self):
-        return self.usr_input
-
-    def change_date(self):
-        self.usr_input_datum = models.DateField("2018-09-07")
+# class Question(models.Model):
+#     # to be deleted
+#     question_text = models.CharField(max_length=200)
+#     pub_date = models.DateTimeField('date published')
+#
+#     def __str__(self):
+#         return self.question_text
+#
+#     def was_published_recently(self):
+#         now = timezone.now()
+#         return  now - datetime.timedelta(days=1) <= self.pub_date <= now
+#
+# class Choice(models.Model):
+#     # to be deleted
+#     question = models.ForeignKey(Question, on_delete=models.CASCADE)
+#     choice_text = models.CharField(max_length=200)
+#     votes = models.IntegerField(default=0)
+#
+#     def __str__(self):
+#         return self.choice_text
+#
+#
+# class User_input(models.Model):
+#     # to be deleted
+#     usr_input = models.CharField(max_length=200)
+#     usr_input_datum = models.DateField(auto_now_add=True, null=True)
+#     #text_to_show = "Generátor AIS."
+#     #list_test = uzivatele
+#     #dict_test = dict(list(enumerate(list_test)))
+#
+#
+#     def __str__(self):
+#         return self.usr_input
+#
+#     def change_date(self):
+#         self.usr_input_datum = models.DateField("2018-09-07")
 
 class Document(models.Model):
     docfile = models.FileField(upload_to='documents/')
-    doc_date = models.DateField(null=True)
+    #doc_date = models.DateField(null=True)
+    doc_date = models.CharField(max_length=60)
 
     def filename(self):
         return os.path.basename(self.docfile.name)
\ No newline at end of file
Index: generator/ais_file.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- generator/ais_file.py	(date 1540628945000)
+++ generator/ais_file.py	(date 1540639877220)
@@ -11,20 +11,8 @@
 import datetime
 import calendar
 from czech_holidays import holidays
-from datetime import timedelta
-import numpy as np
 
-# rozpis_sluzeb = pd.read_excel("srpen18.xlsx")
-#
-# def open_input_excel_file(input_file):
-#     #with open('name.txt', 'wb+') as destination:
-#     #    for chunk in f.chunks():
-#     #        destination.write(chunk)
-#
-#     rozpis_sluzeb = pd.read_excel(input_file)
-#     return rozpis_sluzeb
-
-class Sluzba():
+class Sluzba:
     """
     NaN     - všední pracovní den: " 07:00 - 15:30, 11:30 - 12:00, 8, 0, 0, 0, 0, 0 "
             - víkend, svátek: " None, None, 0, 0, 0, 0, 0, 0
@@ -48,25 +36,25 @@
         self.vikend = False
         self.act_variable = [None, 1, 2, 3]
 
-        self.nan_pd = " 07:00", "15:30", "11:30", "12:00", None, None, 8, 0, 0, 0, 0, 0, self.name
-        self.nan_san = None, None, None, None, None, None, 8, 0, 0, 0, 0, 0, self.name
-        self.nan_san_sv = None, None, None, None, None, None, 8, 0, 0, 0, 0, 0, self.name
-        self.nan_sv = None, None, None, None, None, None, 8, 0, 0, 0, 0, 0, self.name
-        self.d1_pd = "07:00", "19:00", "11:30", "12:00", None, None, 11.5, 3.5, 0, 0, 0, 0, self.name
-        self.d1_san = "07:00", "19:00", None, None, None, None, 12, 0, 12, 0, 12, 0, self.name
-        self.d1_sv = "07:00", "19:00", None, None, None, None, 12, 0, 12, 0, 0, 12, self.name
-        self.d1_san_sv = "07:00", "19:00", None, None, None, None, 12, 0, 12, 0, 12, 12, self.name
-        self.d3_san = "07:00", "11:00", None, None, None, None, 4, 0, 4, 0, 4, 0, self.name
-        self.d3_san_sv = "07:00", "11:00", None, None, None, None, 4, 0, 4, 0, 4, 4, self.name
-        self.d3_sv = "07:00", "11:00", None, None, None, None, 4, 0, 4, 0, 0, 4, self.name
-        self.z_pd = "07:00", "00:00", "11:00", "19:00", None, None, 9, 0, 0, 2, 0, 0, self.name
-        self.z_san = ["19:00", "00:00", None, None, None, None, 5, 0, 5, 2, 5, 0, self.name]
-        self.z_san_sv = ["19:00", "00:00", None, None, None, None, 5, 0, 5, 2, 5, 5, self.name]
-        self.z_sv = ["19:00", "00:00", None, None, None, None, 5, 0, 0, 2, 0, 5, self.name]
-        self.z_d_pd = ["00:00", "07:00", None, None, None, None, 7, 0, 0, 6, 0, 0, self.name]
-        self.z_d_san = ["00:00", "07:00", None, None, None, None, 7, 0, 7, 6, 7, 0, self.name]
-        self.z_d_san_sv = ["00:00", "07:00", None, None, None, None, 7, 0, 7, 6, 7, 7, self.name]
-        self.z_d_sv = ["00:00", "07:00", None, None, None, None, 7, 0, 0, 6, 0, 7, self.name]
+        self.nan_pd = " 07:00", "15:30", "11:30", "12:00", None, None, 8, None, None, None, None, None, self.name
+        self.nan_san = None, None, None, None, None, None, None, None, None, None, None, None, self.name
+        self.nan_san_sv = None, None, None, None, None, None, None, None, None, None, None, None, self.name
+        self.nan_sv = None, None, None, None, None, None, 8, None, None, None, None, None, self.name
+        self.d1_pd = "07:00", "19:00", "11:30", "12:00", None, None, 11.5, 3.5, None, None, None, None, self.name
+        self.d1_san = "07:00", "19:00", None, None, None, None, 12, None, 12, None, 12, None, self.name
+        self.d1_sv = "07:00", "19:00", None, None, None, None, 12, None, 12, None, None, 12, self.name
+        self.d1_san_sv = "07:00", "19:00", None, None, None, None, 12, None, 12, None, 12, 12, self.name
+        self.d3_san = "07:00", "11:00", None, None, None, None, 4, None, 4, None, 4, None, self.name
+        self.d3_san_sv = "07:00", "11:00", None, None, None, None, 4, None, 4, None, 4, 4, self.name
+        self.d3_sv = "07:00", "11:00", None, None, None, None, 4, None, 4, None, None, 4, self.name
+        self.z_pd = "07:00", "00:00", "11:00", "19:00", None, None, 9, None, None, 2, None, None, self.name
+        self.z_san = ["19:00", "00:00", None, None, None, None, 5, None, 5, 2, 5, None, self.name]
+        self.z_san_sv = ["19:00", "00:00", None, None, None, None, 5, None, 5, 2, 5, 5, self.name]
+        self.z_sv = ["19:00", "00:00", None, None, None, None, 5, None, None, 2, None, 5, self.name]
+        self.z_d_pd = ["00:00", "07:00", None, None, None, None, 7, None, None, 6, None, None, self.name]
+        self.z_d_san = ["00:00", "07:00", None, None, None, None, 7, None, 7, 6, 7, None, self.name]
+        self.z_d_san_sv = ["00:00", "07:00", None, None, None, None, 7, None, 7, 6, 7, 7, self.name]
+        self.z_d_sv = ["00:00", "07:00", None, None, None, None, 7, None, None, 6, None, 7, self.name]
 
     def set_variables(self):
         # def set_variables(self,csv_to_change)
@@ -91,7 +79,7 @@
                 self.act_variable = self.d3_san_sv
             else:
                 self.act_variable = self.d3_sv
-        elif self.name == "z" or self.name == "n1"or self.name == "nk":
+        elif self.name == "z" or self.name == "n1" or self.name == "nk":
             if not self.vikend and not self.svatek:
                 self.act_variable = self.z_pd
             elif not self.vikend and self.svatek:
@@ -119,7 +107,6 @@
             else:
                 self.act_variable = self.nan_san
 
-
     def name_reload(self):
         self.act_variable[12] = self.name
 
@@ -141,7 +128,7 @@
     return sluzby_mesic_pop
 
 
-def generate_ais( uzivatel, rozpis_sluzeb, rok, mes, den=1):
+def generate_ais(uzivatel, rozpis_sluzeb, rok, mes, den=1):
     """
     1) generuje ais = pd.DataFrame podle akt. měsíce
     2) extrahuje služby na daný měsíc
@@ -152,13 +139,12 @@
     datum = datetime.date(rok, mes, den)
     days_in_month = calendar.monthrange(datum.year, datum.month)
 
-
     ais = pd.DataFrame(index=range(1, days_in_month[1] + 1), columns=range(1, 14))
     # print(ais)
 
     moje_sluzby = []
 
-    #for item in rozpis_sluzeb.loc["MUDr. Bortel", :].values[0]:
+    # for item in rozpis_sluzeb.loc["MUDr. Bortel", :].values[0]:
     for item in rozpis_sluzeb.loc[uzivatel, :].values[0]:
         if type(item) != str:
             item = ''
@@ -169,7 +155,6 @@
     # print(moje_sluzby_pd)
 
     # generuje obj. Sluzba() - POZN: upravit fci aby returnovala list sluzeb
-    sluzby_mesic_lst = []
     sluzby_mesic_lst = populator_2(moje_sluzby_pd, datum.month, datum.year)
     # print(sluzby_mesic_lst)
 
@@ -186,20 +171,18 @@
 
     return ais
 
-
-#rozpis_sluzeb = pd.read_excel("srpen18.xlsx")
-#uzivatele = [name[0] for name in rozpis_sluzeb.index.tolist()  if "MUDr" in name[0]]
-
-class Generate_for_all():
+class Generate_for_all:
     """
     Objekt, který bere .xlsx dokument, extrahuje všechny uzivatele, vytvoří dict: key= uzivatel, value=ais pro daného
     uživatele.
     """
-    def __init__(self, rozpis_sluzeb_file,year, month):
+
+    def __init__(self, rozpis_sluzeb_file, year, month):
+        self.all_clear = True
         self.rozpis_sluzeb = pd.read_excel(rozpis_sluzeb_file)
         self.year = year
         self.month = month
-        #self.uzivatele = [name[0] for name in self.rozpis_sluzeb.index.tolist()  if "MUDr" in name[0]]
+
         self.uzivatele = []
         for name in self.rozpis_sluzeb.index.tolist():
             if "MUDr" in name[0]:
@@ -208,16 +191,14 @@
                 break
         self.uzivatele_dict = {}
 
-
     def gen_ais_all(self):
         for uzivatel in self.uzivatele:
-            #print("adding %s into dict" %uzivatel)
-            self.uzivatele_dict[uzivatel] = generate_ais(uzivatel, self.rozpis_sluzeb, self.year, self.month )
-            #print("done, %s added" %uzivatel)
+            # print("adding %s into dict" %uzivatel)
+            self.uzivatele_dict[uzivatel] = generate_ais(uzivatel, self.rozpis_sluzeb, self.year, self.month)
+            # print("done, %s added" %uzivatel)
 
-        #print(self.uzivatele_dict)
+        # print(self.uzivatele_dict)
         return self.uzivatele_dict
 
-
-    def gen_ais(self,inpt):
+    def gen_ais(self, inpt):
         return generate_ais(inpt, self.rozpis_sluzeb)
Index: generator/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- generator/urls.py	(date 1540628945000)
+++ generator/urls.py	(date 1540651253828)
@@ -3,15 +3,9 @@
 
 app_name = 'generator'
 urlpatterns = [
-    path('', views.IndexView.as_view(), name='index'),
-    #path('1/1/', views.detail_1, name='detail_1'),
-    #path('<int:pk>/', views.DetailView.as_view(), name='detail'),
-    #path('<int:pk>/results/', views.ResultsView.as_view(), name='results'),
-    #path('<int:question_id>/vote/', views.vote, name='vote'),
-    #path('ais/', views.generator_ais, name='ais'),
-    #path('usr_input/', views.usr_input, name='usr_input'),
+    #path('', views.IndexView.as_view(), name='index'),
+    path('', views.index, name='index'),
     path('input_excel/', views.input_excel, name='input_excel'),
-    #path('upload/', views.upload, name='upload'),
     path('upload_date/', views.upload_date, name='upload_date'),
     path('input_date/', views.input_date, name='input_date'),
     path('render_sel_us_ais/', views.render_sel_us_ais, name='render_sel_us_ais'),
Index: generator/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- generator/views.py	(date 1540628945000)
+++ generator/views.py	(date 1540812099174)
@@ -1,23 +1,22 @@
 from datetime import datetime
-from django.http import HttpResponse, Http404, HttpResponseRedirect, StreamingHttpResponse
-from django.urls import reverse
-from .models import Question, Choice, User_input, Document
+from django.http import HttpResponse
+from .models import Document
 from django.views import generic
 from django.utils import timezone
 from django.contrib import messages
 from django.core.exceptions import ValidationError
-from django.core.cache import cache, caches
+from django.core.cache import cache
 import pandas as pd
 from io import BytesIO
 import xlsxwriter
 import unicodedata
-
-from django_pandas.managers import DataFrameManager
-from .ais_file import generate_ais, Generate_for_all
-from django.template import loader
-from django.shortcuts import render, get_object_or_404
+from .ais_file import Generate_for_all
+from django.shortcuts import render
 from .forms import UploadFileForm, UploadDateForm,FormDateAndUpload
 
+import requests
+from django.conf import settings
+
 
 def home(request):
 
@@ -61,7 +60,6 @@
     :return:
     """
 
-
     def validate_input(date_input):
         #global date_input_year, date_input_month
         valid = False
@@ -70,47 +68,64 @@
             date_input_month = int(date_input[5:7])
             date_input_dict = {"month": date_input_month, "year": date_input_year}
             request.session["date_input_final"] = date_input_dict
-            if date_input_year >= 2000 and date_input_year <= int(datetime.now().year) and date_input_month in range(1,13):
+            if 2000 <= date_input_year <= int(datetime.now().year) and date_input_month in range(1, 13):
                 valid = True
         except ValueError:
-            valid = False
             raise ValidationError("Špatný formát datumu")
-        return valid
-
+        return valid, date_input_year, date_input_month
 
-    #date_input = request.POST.get('date', None)
-    #date_input_year = int(date_input[:4])
-    #date_input_month = int(date_input[5:7])
 
-    #return render(request, 'ais_gen/input_excel.html')
+    if request.method == 'POST':
+        form = UploadDateForm(request.POST, request.FILES)
+        if form.is_valid():
+            newdoc = Document(docfile=request.FILES['file'], doc_date=request.POST['date'])
+            validation = validate_input(newdoc.doc_date)
+            if validation[0]:
+                ''' Begin reCAPTCHA validation '''
+                recaptcha_response = request.POST.get('g-recaptcha-response')
+                data = {
+                    'secret': settings.GOOGLE_RECAPTCHA_SECRET_KEY,
+                    'response': recaptcha_response
+                }
+                r = requests.post('https://www.google.com/recaptcha/api/siteverify', data=data)
+                result = r.json()
+                ''' End reCAPTCHA validation '''
+                if result['success']:
+                    try:
+                        novy_objekt = Generate_for_all(newdoc.docfile, validation[1], validation[2])
+                        user_select = novy_objekt.gen_ais_all()
+                        cache.set("user_select", user_select, 60)
 
-
-    date_input = request.POST.get('date', None)
-
-    if validate_input(date_input):
-        print("valid - True")
-        return render(request, 'ais_gen/input_excel.html')
-    else:
-        print("valid - False")
-        messages.error(request, "Error")
+                        # Redirect to the document list after POST
+                        return render(request, 'ais_gen/user_selection.html', {'user_select': user_select})
+                    except:
+                        messages.error(request, 'Chyba, špatné datum nebo soubor.')
+                        return render(request, 'ais_gen/input_date.html')
+                else:
+                    messages.error(request, 'Invalid reCAPTCHA. Please try again.')
+        else:
+            messages.error(request, "Pravděpodobně špatně zadané datum")
 
 def input_excel(request):
     #global user_select
     cele_datum = request.session["date_input_final"]
     if request.method == 'POST':
-        print("cele_datum: %s" % cele_datum)
+        #print("cele_datum: %s" % cele_datum)
         date_input_month = cele_datum["month"]
         date_input_year = cele_datum["year"]
         form = UploadFileForm(request.POST, request.FILES)
         if form.is_valid():
             newdoc = Document(docfile=request.FILES['file'])
-            novy_objekt = Generate_for_all(newdoc.docfile, date_input_year, date_input_month)
-            user_select = novy_objekt.gen_ais_all()
-            cache.set("user_select", user_select, 6000)
-            print("cache: %s" %cache.get("user_select"))
+            print("type: %s" %type(newdoc.docfile))
+            try:
+                novy_objekt = Generate_for_all(newdoc.docfile, date_input_year, date_input_month)
+                user_select = novy_objekt.gen_ais_all()
+                cache.set("user_select", user_select, 60)
 
-            # Redirect to the document list after POST
-            return render(request, 'ais_gen/user_selection.html', {'user_select':user_select})
+                # Redirect to the document list after POST
+                return render(request, 'ais_gen/user_selection.html', {'user_select':user_select})
+            except:
+                return render(request, 'ais_gen/input_excel.html')
         else:
             #form = DocumentForm()  # A empty, unbound form
             print("else:form - ok")
@@ -131,10 +146,7 @@
     uzivatel =  request.POST.get('zamestnanec', None)
 
     excel_file = BytesIO()
-    #uzivatel_pd = user_select[uzivatel]
     uzivatel_pd = cache.get("user_select")[uzivatel]
-    #uzivatel_pd = request.session['user_select'][uzivatel]
-    #uzivatel_pd = request.session['user_select'][uzivatel]
     xlwriter = pd.ExcelWriter(excel_file, engine='xlsxwriter')
     uzivatel_pd.to_excel(xlwriter, sheet_name='Sheet1')
 
@@ -142,7 +154,7 @@
     xlwriter.close()
 
     excel_file.seek(0)
-    name = uzivatel
+    #name = uzivatel
 
     filename = "ais" + "_" + uzivatel.split()[1] + "_" + str(request.session["date_input_final"]["year"]) + "_" + str(request.session["date_input_final"]["month"])
     normal_filename = unicodedata.normalize('NFKD', filename).encode('ASCII', 'ignore').decode('UTF-8').lower()
@@ -165,53 +177,9 @@
     template_name = 'ais_gen/index.html'
     context_object_name ='latest_question_list'
 
-    def get_queryset(self):
-        """
-        Return the last five published questions (not including those set to be
-        published in the future).
-        """
-        return Question.objects.filter(pub_date__lte=timezone.now()).order_by('-pub_date')[:5]
-
-
-
-class DetailView(generic.DetailView):
-    model = Question
-    template_name = 'ais_gen/detail.html'
-
-    def get_queryset(self):
-        """
-        Excludes any questions that are not published yet.
-        """
-        return Question.objects.filter(pub_date__lte=timezone.now())
+def index(request):
+    return render(request, 'ais_gen/index.html')
 
-
-class ResultsView(generic.DetailView):
-    model = Question
-    template_name = 'ais_gen/results.html'
-
-
-def detail(request, question_id):
-    question = get_object_or_404(Question, pk=question_id)
-    return render(request, 'ais_gen/detail.html', {'question': question})
-
-
-
-def results(request, question_id):
-    question = get_object_or_404(Question, pk=question_id)
-    return render(request, 'ais_gen/results.html', {'question': question})
-
-def vote(request, question_id):
-    question = get_object_or_404(Question, pk=question_id)
-    try:
-        selected_choice = question.choice_set.get(pk=request.POST['choice'])
-    except (KeyError, Choice.DoesNotExist):
-        return render(request, 'ais_gen/detail.html',{
-            'question':question, 'error_message': "You didn't select a choice.",
-        })
-    else:
-        selected_choice.votes += 1
-        selected_choice.save()
-        return HttpResponseRedirect(reverse('generator:results', args=(question.id,)))
 
 def generator_ais(request):
     return HttpResponse("Vyberte požadovaný měsíc a vepište Vaše služby.")
\ No newline at end of file
Index: generator/forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- generator/forms.py	(date 1540628945000)
+++ generator/forms.py	(date 1540720817637)
@@ -1,25 +1,73 @@
 from django import forms
 from django.utils import timezone
+from datetime import datetime
+from django.core.exceptions import ValidationError
 
 
 class UploadFileForm(forms.Form):
     #title = forms.CharField(max_length=50)
     file = forms.FileField(label='Select a file', help_text='max. 42 megabytes')
 
+
+class UploadDateForm(forms.Form):
+    class Meta:
+        pass
+
 class UploadDateForm(forms.Form):
-    date = forms.DateField(widget=forms.TextInput(attrs={'type':'date', 'placeholder':'xxx'}))
+    # to be deleted
+    #date = forms.DateField(widget=forms.TextInput(attrs={'type':'month', 'name':'date'}))
+    date = forms.CharField(widget=forms.TextInput(attrs={'type':'month', 'name':'date'}))
+
+    # TEST-upload
+    file = forms.FileField(label='Import rozpisu služeb', help_text='max. 42 megabytes')
+
+    # def clean_date(self):
+    #     print("validating_date")
+    #     date = self.cleaned_data["date"]
+    #
+    #     if 2000 >= date[:4] >= int(datetime.now().year) and date[5:7] not in range(1, 13):
+    #         print("validation_date FALSE")
+    #         raise ValidationError("chyba")
+    #
+    #     print("validation_date TRUE")
+    #     return date
+    #
+    # def clean_file(self):
+    #     print("validate file")
+    #     file = self.cleaned_data["file"]
+    #
+    #     return file
+
+    def clean(self):
+        print("function clean()")
+        x = super()
+        print(x)
+        cleaned_data = super().clean()
+        print("cleaned data %s" %cleaned_data)
+        date = cleaned_data.get("date")
+        print("date %s" %date)
+        file = cleaned_data.get("file")
+        print("file %s" %file)
+
+        #if 2000 >= date[:4] >= int(datetime.now().year) and date[5:7] not in range(1, 13):
+        #    print("validation_date FALSE")
+        #    raise ValidationError("chyba")
+
+        print("return cleaned data")
+        return cleaned_data
+
 
 
 class FormDateAndUpload(forms.Form):
     #date = forms.DateField(widget=forms.TextInput(attrs={'type': 'month'}), help_text="vyberte měsíc a rok")
     date = forms.DateField(widget=forms.DateInput(attrs={'type': 'month'}), help_text="vyberte měsíc a rok")
     date1 = forms.CharField(max_length=50)
-    start_date = forms.DateField(label=("Start date"),
-                                        initial=timezone.now().date(),
-                                        input_formats=['%Y/%m/%d'],
-                                        widget=forms.DateInput(format='%Y/%m/%d'))
+    start_date = forms.DateField(label="Start date",
+                                 initial=timezone.now().date(),
+                                 input_formats=['%Y/%m/%d'],
+                                 widget=forms.DateInput(format='%Y/%m/%d'))
 
-    #file = forms.FileField(label='Select a file', help_text='zde nahrejte korespondující AIS')
+    #file = forms.FileField(label='Select a file', help_text='max. 42 megabytes')
 
 
     def clean(self):
@@ -37,7 +85,7 @@
 
     def clean_date(self):
         data = self.cleaned_data['date']
-        print("printing-%s" %date)
+        #print("printing-%s" %data)
 
         return data
 
Index: generator/templates/ais_gen/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- generator/templates/ais_gen/index.html	(date 1540628945000)
+++ generator/templates/ais_gen/index.html	(date 1540813211222)
@@ -2,17 +2,12 @@
 
 {% block content %}
 
-{% if latest_question_list %}
+    <h5>Postup</h5><br>
     <ul>
-        {% for question in latest_question_list%}
-            <li><a href="{% url 'generator:detail' question.id %}">{{ question.question_text}}</a> </li>
-        {% endfor %}
+        <li>c</li>
+        <li>c</li>
+        <li>c</li>
+        <li>c</li>
     </ul>
-{% else %}
-    <p>No polls are available.</p>
-{% endif %}
-
-<a href="{% url 'generator:upload_date' %}">Generátor AIS</a>
-
 {% endblock %}
 
Index: generator/templates/ais_gen/input_date.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- generator/templates/ais_gen/input_date.html	(date 1540628945000)
+++ generator/templates/ais_gen/input_date.html	(date 1540812008775)
@@ -2,7 +2,7 @@
 
 {% block content %}
 
-    <h3>Zvol měsíc a rok</h3><br>
+    <h3>Zvol měsíc a rok, poté nahrej rozpis služeb na daný měsíc.</h3><br>
 
     {% if error_message %}
         <p><strong>{{ error_message }}</strong></p>
@@ -10,7 +10,7 @@
 
     {% if messages %}
         {% for message in messages %}
-            alert(message);
+            {{ message }}
         {% endfor %}
     {% endif %}
 
@@ -20,13 +20,28 @@
     <input type="submit" value="Dále"><br>
 </form>{% endcomment %}
 
-    <form action="{% url 'generator:input_date' %}" method="post">
+    {% comment %} <form action="{% url 'generator:input_date' %}" method="post" enctype="multipart/form-data">
+        {% csrf_token %}
+        <input type="month" id="date" name="date" min="2000-03" value="{% now "Y" %}-{% now "m" %}"><br>
+        <span class="validity"></span><br>
+        <input type= "file" name="file"><br><br>
+        <input type="submit" value="Dále"><br>
+    </form><br>{% endcomment %}
+
+    <form action="{% url 'generator:input_date' %}" method="post" enctype="multipart/form-data">
         {% csrf_token %}
-        <input type="month" id="date" name="date" min="2000-03" value="{% now "Y" %}-{% now "m" %}">
-        <span class="validity"></span>
+        {{ date_form.date }}<br><br>
+        {{ date_form.file }}<br><br>
+
+        <script src='https://www.google.com/recaptcha/api.js'></script>
+        <div class="g-recaptcha" data-sitekey="6LcBYncUAAAAANJxrHi-15DFKZPyNdP9bVmYwrrl"></div><br>
+
         <input type="submit" value="Dále"><br>
     </form><br>
+
+
+
     <p> pozn. pokud používáte Internet Explorer, pak vepište datum ve formátu "ROK-MĚSÍC", např. leden 2018 jako
-        "2018-01"</p>
+        "2018-01". Vhodnější je však užít Chrome/Edge/Firefox.</p>
 
 {% endblock %}
Index: generator/templates/ais_gen/input_excel.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- generator/templates/ais_gen/input_excel.html	(date 1540628945000)
+++ generator/templates/ais_gen/input_excel.html	(date 1540649377596)
@@ -7,7 +7,7 @@
 {% if error_message %}
     <p><strong>{{ error_message }}</strong></p>
 {% endif %}
-
+<br>
 
 <form action="{% url 'generator:input_excel' %}" method="post" enctype="multipart/form-data">
     {% csrf_token %}
@@ -16,6 +16,4 @@
 </form>
 
 
-<a href="{% url 'generator:index' %}">Index</a>
-
 {% endblock %}
\ No newline at end of file
Index: ais_gen/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ais_gen/settings.py	(date 1540628945000)
+++ ais_gen/settings.py	(date 1540808110715)
@@ -127,3 +127,4 @@
 # https://docs.djangoproject.com/en/2.1/howto/static-files/
 
 STATIC_URL = '/static/'
+GOOGLE_RECAPTCHA_SECRET_KEY ='6LcBYncUAAAAAGvLax5Zu_-HVNzalwx8mfqtzynA'
diff --git db.sqlite3 db.sqlite3
deleted file mode 100644
index 2e4616868b94fa71b7fc810227ef455bee4d55a4..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

